basePath: /api/v1
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  models.BasicUser:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
  models.ListMetaData:
    properties:
      limit:
        type: integer
      offset:
        type: integer
      total:
        type: integer
    type: object
  models.ListPostReq:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Post'
        type: array
      metadata:
        $ref: '#/definitions/models.ListMetaData'
    type: object
  models.Post:
    properties:
      author:
        $ref: '#/definitions/models.BasicUser'
      content:
        type: string
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      title:
        type: string
      updated_at:
        type: string
    type: object
  models.PostReq:
    properties:
      content:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      deleted_at:
        type: string
      id:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  models.UserReq:
    properties:
      id:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for the Blog Platform.
  title: Blog Platform API
  version: "1.0"
paths:
  /posts:
    get:
      description: Get a list of all posts with optional filters
      parameters:
      - description: Author username
        in: query
        name: username
        type: string
      - description: Creation date
        in: query
        name: date
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListPostReq'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all posts
      tags:
      - posts
    post:
      consumes:
      - application/json
      description: Create a new post with the input payload
      parameters:
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new post
      tags:
      - posts
  /posts/{id}:
    delete:
      description: Delete a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a post
      tags:
      - posts
    get:
      description: Get details of a post by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update post details by ID
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: string
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a post
      tags:
      - posts
  /users:
    get:
      description: Get a list of all users
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Page size
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with the input payload
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserReq'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Soft delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Delete a user
      tags:
      - users
    get:
      description: Get details of a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Get a user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user details by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/gin.H'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/gin.H'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/gin.H'
      summary: Update a user
      tags:
      - users
swagger: "2.0"
